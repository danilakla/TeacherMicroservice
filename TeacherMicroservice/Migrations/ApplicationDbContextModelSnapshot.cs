// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeacherMicroservice.Data;

#nullable disable

namespace TeacherMicroservice.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TeacherMicroservice.Models.EducationMaterial", b =>
                {
                    b.Property<int>("EducationMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationMaterialId"), 1L, 1);

                    b.Property<int>("Course")
                        .HasColumnType("int");

                    b.Property<string>("FacultieName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EducationMaterialId");

                    b.ToTable("EducationMaterials");
                });

            modelBuilder.Entity("TeacherMicroservice.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"), 1L, 1);

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeachersId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("TeachersId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("TeacherMicroservice.Models.SubjectDetail", b =>
                {
                    b.Property<int>("SubjectDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectDetailId"), 1L, 1);

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("FileName")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TypeMaterialId")
                        .HasColumnType("int");

                    b.HasKey("SubjectDetailId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TypeMaterialId");

                    b.ToTable("SubjectDetails");
                });

            modelBuilder.Entity("TeacherMicroservice.Models.Teachers", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("TeacherMicroservice.Models.TypeMaterial", b =>
                {
                    b.Property<int>("TypeMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeMaterialId"), 1L, 1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeMaterialId");

                    b.ToTable("TypeMaterials");
                });

            modelBuilder.Entity("TeacherMicroservice.Models.Subject", b =>
                {
                    b.HasOne("TeacherMicroservice.Models.Teachers", "Teachers")
                        .WithMany("Subjects")
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("TeacherMicroservice.Models.SubjectDetail", b =>
                {
                    b.HasOne("TeacherMicroservice.Models.Subject", "Subject")
                        .WithMany("SubjectDetails")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeacherMicroservice.Models.TypeMaterial", "TypeMaterial")
                        .WithMany("SubjectDetails")
                        .HasForeignKey("TypeMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("TypeMaterial");
                });

            modelBuilder.Entity("TeacherMicroservice.Models.Subject", b =>
                {
                    b.Navigation("SubjectDetails");
                });

            modelBuilder.Entity("TeacherMicroservice.Models.Teachers", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("TeacherMicroservice.Models.TypeMaterial", b =>
                {
                    b.Navigation("SubjectDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
